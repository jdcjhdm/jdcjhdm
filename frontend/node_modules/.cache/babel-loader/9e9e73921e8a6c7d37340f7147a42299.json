{"ast":null,"code":"var _jsxFileName = \"/home/jalal/Documents/Code/tiztype/frontend/src/pages/index/landing components/intro components/Timing.js\";\nimport React, { useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\nconst items = ['Lorem', 'ipsum', 'dolor', 'sit'];\nconst config = {\n  mass: 5,\n  tension: 2000,\n  friction: 200\n};\n\nconst TimingExample = () => {\n  const [toggle, set] = useState(true);\n  const trail = useTrail(items.length, {\n    config,\n    opacity: toggle ? 1 : 0,\n    x: toggle ? 0 : 20,\n    height: toggle ? 80 : 0,\n    from: {\n      opacity: 0,\n      x: 20,\n      height: 0\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trails-main\",\n    onClick: () => set(state => !state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }, trail.map(({\n    x,\n    height,\n    ...rest\n  }, index) => /*#__PURE__*/React.createElement(animated.div, {\n    key: items[index],\n    className: \"trails-text\",\n    style: { ...rest,\n      transform: x.interpolate(x => `translate3d(0,${x}px,0)`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    style: {\n      height\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, items[index])))));\n};\n\nexport default TimingExample;","map":{"version":3,"sources":["/home/jalal/Documents/Code/tiztype/frontend/src/pages/index/landing components/intro components/Timing.js"],"names":["React","useState","useTrail","animated","items","config","mass","tension","friction","TimingExample","toggle","set","trail","length","opacity","x","height","from","state","map","rest","index","transform","interpolate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,cAAnC;AAEA,MAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,OAAV,EAAmB,OAAnB,EAA4B,KAA5B,CAAd;AACA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,IAAI,EAAE,CAAR;AAAWC,EAAAA,OAAO,EAAE,IAApB;AAA0BC,EAAAA,QAAQ,EAAE;AAApC,CAAf;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC3B,QAAM,CAACC,MAAD,EAASC,GAAT,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAMW,KAAK,GAAGV,QAAQ,CAACE,KAAK,CAACS,MAAP,EAAe;AACpCR,IAAAA,MADoC;AAEpCS,IAAAA,OAAO,EAAEJ,MAAM,GAAG,CAAH,GAAO,CAFc;AAGpCK,IAAAA,CAAC,EAAEL,MAAM,GAAG,CAAH,GAAO,EAHoB;AAIpCM,IAAAA,MAAM,EAAEN,MAAM,GAAG,EAAH,GAAQ,CAJc;AAKpCO,IAAAA,IAAI,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE,EAAjB;AAAqBC,MAAAA,MAAM,EAAE;AAA7B;AAL8B,GAAf,CAAtB;AAQA,sBACC;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,OAAO,EAAE,MAAML,GAAG,CAACO,KAAK,IAAI,CAACA,KAAX,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEN,KAAK,CAACO,GAAN,CAAU,CAAC;AAAEJ,IAAAA,CAAF;AAAKC,IAAAA,MAAL;AAAa,OAAGI;AAAhB,GAAD,EAAyBC,KAAzB,kBACV,oBAAC,QAAD,CAAU,GAAV;AACC,IAAA,GAAG,EAAEjB,KAAK,CAACiB,KAAD,CADX;AAEC,IAAA,SAAS,EAAC,aAFX;AAGC,IAAA,KAAK,EAAE,EAAE,GAAGD,IAAL;AAAWE,MAAAA,SAAS,EAAEP,CAAC,CAACQ,WAAF,CAAcR,CAAC,IAAK,iBAAgBA,CAAE,OAAtC;AAAtB,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,QAAD,CAAU,GAAV;AAAc,IAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCZ,KAAK,CAACiB,KAAD,CAAvC,CALD,CADA,CADF,CADD,CADD;AAeA,CAzBD;;AA2BA,eAAeZ,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useTrail, animated } from 'react-spring';\n\nconst items = ['Lorem', 'ipsum', 'dolor', 'sit'];\nconst config = { mass: 5, tension: 2000, friction: 200 };\n\nconst TimingExample = () => {\n\tconst [toggle, set] = useState(true);\n\tconst trail = useTrail(items.length, {\n\t\tconfig,\n\t\topacity: toggle ? 1 : 0,\n\t\tx: toggle ? 0 : 20,\n\t\theight: toggle ? 80 : 0,\n\t\tfrom: { opacity: 0, x: 20, height: 0 },\n\t});\n\n\treturn (\n\t\t<div className='trails-main' onClick={() => set(state => !state)}>\n\t\t\t<div>\n\t\t\t\t{trail.map(({ x, height, ...rest }, index) => (\n\t\t\t\t\t<animated.div\n\t\t\t\t\t\tkey={items[index]}\n\t\t\t\t\t\tclassName='trails-text'\n\t\t\t\t\t\tstyle={{ ...rest, transform: x.interpolate(x => `translate3d(0,${x}px,0)`) }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<animated.div style={{ height }}>{items[index]}</animated.div>\n\t\t\t\t\t</animated.div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TimingExample;\n"]},"metadata":{},"sourceType":"module"}