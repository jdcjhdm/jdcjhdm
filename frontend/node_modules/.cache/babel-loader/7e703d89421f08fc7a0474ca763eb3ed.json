{"ast":null,"code":"var _jsxFileName = \"/home/jalal/Documents/Code/tiztype/frontend/src/pages/index/components/Introduction.js\";\nimport React, { useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { useTransition, useSpring, useChain, config } from 'react-spring';\nimport { Global, Container, Item } from './styles';\nimport data from './data';\nconst [open, set] = useState(false);\nconst springRef = useRef();\nconst {\n  size,\n  opacity,\n  ...rest\n} = useSpring({\n  ref: springRef,\n  config: config.stiff,\n  from: {\n    size: '20%',\n    background: 'hotpink'\n  },\n  to: {\n    size: open ? '100%' : '20%',\n    background: open ? 'white' : 'hotpink'\n  }\n});\nconst transRef = useRef();\nconst transitions = useTransition(open ? data : [], item => item.name, {\n  ref: transRef,\n  unique: true,\n  trail: 400 / data.length,\n  from: {\n    opacity: 0,\n    transform: 'scale(0)'\n  },\n  enter: {\n    opacity: 1,\n    transform: 'scale(1)'\n  },\n  leave: {\n    opacity: 0,\n    transform: 'scale(0)'\n  }\n}); // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n\nuseChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6]);\n\nconst Introduction = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rtl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }, \"!\\u062A\\u0627\\u06CC\\u067E \\u0622\\u0646\\u0644\\u0627\\u06CC\\u0646 \\u0628\\u0647\\u200C\\u0635\\u0631\\u0641\\u0647\"), /*#__PURE__*/React.createElement(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    style: { ...rest,\n      width: size,\n      height: size\n    },\n    onClick: () => set(open => !open),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }\n  }, transitions.map(({\n    item,\n    key,\n    props\n  }) => /*#__PURE__*/React.createElement(Item, {\n    key: key,\n    style: { ...props,\n      background: item.css\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 6\n    }\n  }))));\n};\n\nexport default Introduction;","map":{"version":3,"sources":["/home/jalal/Documents/Code/tiztype/frontend/src/pages/index/components/Introduction.js"],"names":["React","useState","useRef","render","useTransition","useSpring","useChain","config","Global","Container","Item","data","open","set","springRef","size","opacity","rest","ref","stiff","from","background","to","transRef","transitions","item","name","unique","trail","length","transform","enter","leave","Introduction","props","width","height","map","key","css"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport { render } from 'react-dom';\nimport { useTransition, useSpring, useChain, config } from 'react-spring';\nimport { Global, Container, Item } from './styles';\nimport data from './data';\n\nconst [open, set] = useState(false);\n\nconst springRef = useRef();\nconst { size, opacity, ...rest } = useSpring({\n\tref: springRef,\n\tconfig: config.stiff,\n\tfrom: { size: '20%', background: 'hotpink' },\n\tto: { size: open ? '100%' : '20%', background: open ? 'white' : 'hotpink' },\n});\n\nconst transRef = useRef();\nconst transitions = useTransition(open ? data : [], item => item.name, {\n\tref: transRef,\n\tunique: true,\n\ttrail: 400 / data.length,\n\tfrom: { opacity: 0, transform: 'scale(0)' },\n\tenter: { opacity: 1, transform: 'scale(1)' },\n\tleave: { opacity: 0, transform: 'scale(0)' },\n});\n\n// This will orchestrate the two animations above, comment the last arg and it creates a sequence\nuseChain(open ? [springRef, transRef] : [transRef, springRef], [0, open ? 0.1 : 0.6]);\n\nconst Introduction = props => {\n\treturn (\n\t\t<div className='rtl'>\n\t\t\t<h1 className='heading'>!تایپ آنلاین به‌صرفه</h1>\n\t\t\t<Global />\n\t\t\t<Container style={{ ...rest, width: size, height: size }} onClick={() => set(open => !open)}>\n\t\t\t\t{transitions.map(({ item, key, props }) => (\n\t\t\t\t\t<Item key={key} style={{ ...props, background: item.css }} />\n\t\t\t\t))}\n\t\t\t</Container>\n\t\t</div>\n\t);\n};\n\nexport default Introduction;\n"]},"metadata":{},"sourceType":"module"}